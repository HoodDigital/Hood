# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Hood.Development.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $file = ".\projects\Hood.Development\package.json"
      $json = Get-Content $file | ConvertFrom-Json
      $version = "$($json.version)"

      $exec = "dotnet restore"
      Write-Host "$exec"
      Invoke-Expression $exec

      $exec = "dotnet build .\projects\Hood.Core\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet build .\projects\Hood.Admin\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet build .\projects\Hood.UI\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet build .\projects\Hood.UI.Core\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet build .\projects\Hood.UI.Bootstrap3\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet build .\projects\Hood.UI.Bootstrap4\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet build .\projects\Hood\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      
      Write-Host "##vso[task.setvariable variable=version;]$version"
      $exec = "dotnet pack .\projects\Hood.Core\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet pack .\projects\Hood.Admin\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet pack .\projects\Hood.UI\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet pack .\projects\Hood.UI.Core\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet pack .\projects\Hood.UI.Bootstrap3\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet pack .\projects\Hood.UI.Bootstrap4\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
      $exec = "dotnet pack .\projects\Hood\ -c Release /p:Version=$version"
      Write-Host "$exec"
      Invoke-Expression $exec
  name: BuildAndPack

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '**/*.nupkg;!**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'MyGet'
