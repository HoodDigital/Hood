$.hood||($.hood={}),$.hood.Observable=function(element,options){this.Options=$.extend({element:element,load:"/",save:"/",syncFunction:function(){},changeFunction:function(){this.modelSource.options.change()},evalSynced:!1},options||{}),this.syncFunction=this.Options.syncFunction,this.evalSynced=this.Options.evalSynced,this.viewModel=kendo.observable({modelSource:new kendo.data.DataSource({transport:{read:{url:this.Options.load,dataType:"json"},update:{url:this.Options.save,type:"POST",contentType:"application/x-www-form-urlencoded"},parameterMap:function(e,n){if("read"!==n&&e.models)return{models:e.models}}},batch:!0,schema:{model:{id:"Id"}},change:$.proxy(function(){this.viewModel.selectedModel=this.viewModel.modelSource.view()[0],kendo.bind(this.Options.element,this.viewModel)},this),requestEnd:$.proxy(function(e){null!=e.response.Success&&(e.response.Success?($.hood.Alerts.Success("Saved."),this.evalSynced?eval(this.syncFunction):this.syncFunction()):$.hood.Alerts.Error(e.response.Errors,"An error occurred..."))},this)}),selectedModel:null,getUrl:function(){return"/"+this.selectedModel.Slug},hasChanges:!1,save:function(){this.changeFunction(),this.modelSource.sync(),this.set("hasChanges",!1)},showForm:function(){return null!==this.get("selectedModel")},change:function(e){this.set("hasChanges",!0)},changeFunction:this.Options.changeFunction}),this.viewModel.modelSource.read(),this.Change=function(){this.viewModel.changeFunction()}},$.fn.hoodObservable=function(e){return this.each(function(){var n=$(this);if(!n.data("hoodObservable")){var o=new $.hood.Observable(this,e);n.data("hoodObservable",o)}})},$(document).ready(function(){$(".hood-observable").each(function(){$(this).hoodObservable({load:$(this).data("load"),save:$(this).data("save"),synced:$(this).data("synced"),evalSynced:!0})})});