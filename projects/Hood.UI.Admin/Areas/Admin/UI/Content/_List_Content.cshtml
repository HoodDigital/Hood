@model ContentModel
@inject ContentCategoryCache _categories
@{
    Layout = null;
}

@if (Model.List.Count > 0)
{
    @foreach (var content in Model.List)
    {
        <div class="card hover mb-3 p-3">
            <div class="d-md-flex align-items-center">
                @if (Model.ContentType.ShowImage)
                {
                    <div class="col-md-3 col-lg-2 mb-3 mb-md-0 me-md-3">
                        <a asp-action="Edit" asp-route-id="@content.Id">
                            <fixedImage src="@content.FeaturedImage.MediumUrl" class="img img-full img-1x1 rounded" alt="@content.Title"></fixedImage>
                        </a>
                    </div>
                }
                <div class="col">
                    <div class="mb-1">
                        <a class="h5 fw-bold" asp-action="Edit" asp-route-id="@content.Id">@content.Title</a>
                    </div>
                    <div class="mb-2">
                        @if (Model.ContentType.IsUnknown)
                        {
                            <span class="badge rounded-pill bg-info me-2">@content.ContentType</span>
                        }
                        @content.Status.ToHtml()
                    </div>
                    <div class="mb-2">
                        <small class="d-inline-block me-2"><i class="fa fa-clock text-info me-1"></i> @content.CreatedOn.ToDisplay()</small>
                        <small class="d-inline-block">
                            <i class="fa fa-user text-info me-1"></i>
                            <strong>@content.ToInternalName()</strong>
                        </small>
                    </div>
                    <div class="mb-0">
                        @if (content.Categories.Count == 0)
                        {
                            <small class="badge bg-gray">Not in a category.</small>
                        }
                        @foreach (var category in content.Categories)
                        {
                            <span class="badge bg-gray">@category.Category.DisplayName</span>
                        }
                    </div>
                </div>          
                <div class="col-auto mt-3 mt-md-0 text-end">
                    <div class="btn-group">
                        <a class="btn btn-sm btn-outline-dark" asp-action="Edit" asp-route-id="@content.Id"><i class="fa fa-edit me-2"></i>Edit</a>
                        <button type="button" class="btn btn-sm btn-outline-dark dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <div class="dropdown-menu dropdown-menu-end">
                            @if (Model.ContentType != null && Model.ContentType.BaseName == "Page" && !content.IsHomepage)
                            {
                                <a class="dropdown-item hood-inline-task" asp-action="Edit" asp-route-id="@content.Id" data-complete="$.hood.Content.Lists.Content.Reload">
                                    <i class="fa fa-home me-2"></i>Set as Homepage
                                </a>
                            }
                            @if (content.Status == ContentStatus.Published)
                            {
                                <a class="dropdown-item content-set-status" href="@Url.Action("SetStatus", new { id = content.Id, status = ContentStatus.Draft })">
                                    <i class="fa fa-eye-slash me-2"></i>Archive
                                </a>
                            }
                            else
                            {
                                <a class="dropdown-item content-set-status" href="@Url.Action("SetStatus", new { id = content.Id, status = ContentStatus.Published })">
                                    <i class="fa fa-thumbs-up me-2"></i>Publish
                                </a>
                            }
                            @if (Model.ContentType != null && Model.ContentType.HasPage)
                            {
                                <a class="dropdown-item" href="@content.Url" target="_blank">
                                    <i class="fa fa-search me-2"></i>Preview
                                </a>
                            }
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item content-delete" asp-action="Delete" asp-route-id="@content.Id">
                                <i class="fa fa-trash-alt me-2"></i>
                                Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <partial name="_Pagination" />
}
else
{
    if (Model.ContentType != null)
    {
        <alert type="Info" icon="fa-info" size="Epic" class="text-center m-0">
            There are no @Model.ContentType.TypeNamePlural.ToLower() yet, click "Create New" to add your first @Model.ContentType.TypeName.ToLower().
        </alert>
    }
    else
    {
        <alert type="Info" icon="fa-info" size="Epic" class="text-center m-0">
            There is no content yet, go to a content type to add some.
        </alert>
    }
}
