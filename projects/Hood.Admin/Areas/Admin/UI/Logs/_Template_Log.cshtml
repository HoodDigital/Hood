@model Log
<div class="card p-2 mb-2 hover">
    <div class="row align-items-center">
        <div class="col-md-1">
            @switch (Model.Type)
            {
                case LogType.Success:
                    <span class="badge badge-success">Success</span>
                    break;
                case LogType.Error:
                    <span class="badge badge-danger">Error</span>
                    break;
                case LogType.Warning:
                    <span class="badge badge-warning">Warning</span>
                    break;
                case LogType.Info:
                    <span class="badge badge-info">Info</span>
                    break;
                case LogType.Error404:
                    <span class="badge badge-dark">404 Error</span>
                    break;
                default:
                    <span class="badge badge-light">@Model.Type.ToString()</span>
                    break;
            }
        </div>
        <div class="col-md-3">
            <div><strong>@Model.Time.ToDisplay()</strong></div>
            <small class="d-none d-lg-block text-muted">@Model.Source</small>
        </div>
        <div class="col-md">
            @switch (Model.Type)
            {
                case LogType.Success:
                    <div><strong class="text-success">@Model.Title</strong></div>
                    break;
                case LogType.Error:
                    <div><strong class="text-danger">@Model.Title</strong></div>
                    break;
                case LogType.Warning:
                    <div><strong class="text-warning">@Model.Title</strong></div>
                    break;
                case LogType.Info:
                    <div><strong class="text-info">@Model.Title</strong></div>
                    break;
                default:
                    <div><strong class="">@Model.Title</strong></div>
                    break;
            }
            <small class="d-block">@Model.Message</small>
        </div>
        <a data-toggle="modal" href="@string.Format("#log-{0}", Model.Id)" class="full-box-link"></a>
    </div>
    <div class="modal fade modal-right" id="@string.Format("log-{0}", Model.Id)" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-blade" role="document">
            <div class="modal-content">
                @switch (Model.Type)
                {
                    case LogType.Success:
                        <div class="modal-header bg-success text-white">
                            <h5 class="modal-title">
                                Success
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        break;
                    case LogType.Error:
                        <div class="modal-header bg-danger text-white">
                            <h5 class="modal-title">
                                Error
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        break;
                    case LogType.Warning:
                        <div class="modal-header bg-warning text-white">
                            <h5 class="modal-title">
                                Warning
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        break;
                    case LogType.Info:
                        <div class="modal-header bg-info text-white">
                            <h5 class="modal-title">
                                Info
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        break;
                    default:
                        <div class="modal-header bg-dark text-white">
                            <h5 class="modal-title">
                                @Model.Type.ToString().CamelCaseToString().ToTitleCase()
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        break;
                }
                <div class="modal-body">
                    <div class="form-group">
                        <label>Message</label>
                        <p class="h5 font-weight-normal">
                            @Model.Title
                        </p>
                        <p>@Model.Message</p>
                    </div>
                    @if (Model.Source.IsSet())
                    {
                        <div class="form-group">
                            <label>Source</label>
                            <p class="h5 font-weight-normal">
                                @Model.Source
                            </p>
                        </div>
                    }
                    <div class="form-group">
                        <label>Date &amp; Time</label>
                        <p>
                            @Model.Time.ToDisplay()
                        </p>
                    </div>
                    @if (Model.User != null)
                    {
                        <div class="form-group">
                            <label>User</label>
                            <p>
                                <a asp-action="Edit" asp-controller="Users" asp-route-id="@Model.User.Id">
                                    @Model.User.ToFullName()
                                </a>
                            </p>
                        </div>
                    }
                    @if (Model.SourceUrl.IsSet())
                    {
                        <div class="form-group">
                            <label>Source Url</label>
                            <p>
                                <a href="@Model.SourceUrl">
                                    @Model.SourceUrl
                                </a>
                            </p>
                        </div>
                    }
                    @if (Model.Detail.IsSet())
                    {
                        if (Model.ErrorLogDetail != null)
                        {
                            @if (Model.ErrorLogDetail.Exception != null)
                            {
                                <h5>Exception</h5>
                                <div class="code-viewer p-2 bg-gray auto text-white mb-3" style="font-family:monospace;">
                                    @foreach (var entry in Model.ErrorLogDetail.Exception)
                                    {
                                        <p>
                                            <strong>@entry.Key</strong><br />
                                            @entry.Value
                                        </p>
                                    }
                                </div>
                            }
                            @if (Model.ErrorLogDetail.InnerException != null)
                            {
                                <h5>Inner Exception</h5>
                                <div class="code-viewer p-2 bg-gray auto text-white mb-3" style="font-family:monospace;">
                                    @foreach (var entry in Model.ErrorLogDetail.InnerException)
                                    {
                                        <p>
                                            <strong>@entry.Key</strong><br />
                                            @entry.Value
                                        </p>
                                    }
                                </div>
                            }
                            @if (Model.ErrorLogDetail.ObjectJson.IsSet())
                            {
                                <h5>Object Json</h5>
                                <div class="code-viewer p-2 bg-gray auto text-white mb-3" style="font-family:monospace;">
                                    @Html.Raw(Model.ErrorLogDetail.ObjectJson.ToHtml())
                                </div>
                            }
                        }
                        else
                        {
                            <div class="form-group">
                                <label>Detail</label>
                                <div class="code-viewer p-2 bg-gray text-white" style="font-family:monospace;">
                                    @Html.Raw(Model.Detail.ToHtml())
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
