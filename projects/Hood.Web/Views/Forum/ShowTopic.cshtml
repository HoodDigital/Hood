@model PostModel
@{
    SeoSettings _seoSettings = _settings.GetSeo();
    BasicSettings _basicSettings = _settings.GetBasicSettings();

    ViewData["Title"] = Model.Topic.Forum.Title + " - " + Model.Topic.Title;
    ViewData["SubTitle"] = Model.Topic.Forum.Description;
    ViewData["EditUrl"] = Url.Action("Edit", "Forum", new { area = "Admin", id = Model.Topic.Forum.Id });
    ViewData["Forum"] = Model.Topic.Forum;
    Layout = "_Blank";

    string url = Context.GetSiteUrl(true, true);
    if (_seoSettings.CanonicalUrl.IsSet())
    {
        url = string.Format("{0}{1}", _seoSettings.CanonicalUrl.TrimEnd('/'), Context.Request.Path);
    }
}
@section includes {
    <script src="~/lib/tinymce/tinymce.min.js"></script>
    <script src="~/lib/tinymce/themes/inlite/theme.min.js"></script>
}
@section metas {
    <meta name="description" content="@Model.Topic.Forum.Description" />
    <meta property="og:author" content="@Model.Topic.Author.DisplayName" />
    <meta property="og:title" content="@Model.Topic.Forum.Title" />
    @if (Model.Topic.Forum.ShareImage.DownloadUrl.IsSet())
    {
        <meta property="og:image" content="@Model.Topic.Forum.ShareImage.LargeUrl" />
        <meta property="og:image:secure_url" content="@Model.Topic.Forum.ShareImage.LargeUrl" />
        <meta name="twitter:image" content="@Model.Topic.Forum.ShareImage.LargeUrl" />
    }
    else if (Model.Topic.Forum.FeaturedImage.DownloadUrl.IsSet())
    {
        <meta property="og:image" content="@Model.Topic.Forum.FeaturedImage.LargeUrl" />
        <meta property="og:image:secure_url" content="@Model.Topic.Forum.FeaturedImage.LargeUrl" />
        <meta name="twitter:image" content="@Model.Topic.Forum.FeaturedImage.LargeUrl" />
    }
    else
    {
        <meta property="og:image" content="@_seoSettings.OgImageUrl" />
        <meta property="og:image:secure_url" content="@_seoSettings.OgSecureImageUrl" />
        <meta name="twitter:image" content="@_seoSettings.TwitterCardImageUrl" />
    }
    <meta property="og:description" content="@Model.Topic.Forum.Description" />
    <meta name="twitter:title" content="@Model.Topic.Forum.Title" />
    <meta name="twitter:description" content="@Model.Topic.Forum.Description" />
}
@if (Model.SaveMessage.IsSet())
{
    @Html.BootstrapAlert(Model.SaveMessage, Model.MessageType);
}
<div class="row">
    <div class="col-sm-9">
        <div class="forum-post">
            <div class="post-content">
                <h4>@Model.Topic.Title</h4>
                @Html.Raw(Model.Topic.Description)
            </div>
            <hr />
            <div class="post-content m-b-md">
                @Html.Raw(Model.Topic.Author.ForumSignature)
            </div>
            <p class="no-margin">
                <span class="m-r-sm"><i class="fa fa-user"></i> @Model.Topic.Author.FullName</span>
                <span><i class="fa fa-clock-o"></i> @Model.Topic.CreatedOn.ToLongDateString() at @Model.Topic.CreatedOn.ToShortTimeString()</span>
            </p>
        </div>
        @if (Model.List.Count == 0)
        {
            await Html.RenderPartialAsync("_Posts_NoResults");
        }
        else
        {
            await Html.RenderPartialAsync("_Pagination");
            @foreach (var post in Model.List)
            {
                await Html.RenderPartialAsync("_Template_Post", post);
            }
            await Html.RenderPartialAsync("_Pagination");
        }
        <hr />
        @{ await Html.RenderPartialAsync("_Forms_Post"); }
    </div>
    <div class="col-sm-3">
        @{ await Html.RenderPartialAsync("_Posts_Sidebar"); }
    </div>
</div>
