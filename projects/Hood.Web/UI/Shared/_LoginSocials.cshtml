@inject SignInManager<ApplicationUser> SignInManager
@inject IConfiguration config
@{
    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    if (loginProviders.Count > 0 && (config.IsFacebookConfigured() || config.IsGoogleConfigured()))
    {
        <p class="text-center">
            ...or sign in with
        </p>
        <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
            <div>
                <p>
                    @foreach (var provider in loginProviders)
                    {
                        switch (provider.Name)
                        {
                            case "Facebook":
                                if (config.IsFacebookConfigured())
                                {
                                    <button class="btn btn-block btn-facebook-inversed rounded" type="submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                        <i class="fa fa-facebook"></i> Facebook
                                    </button>
                                }
                                break;
                            case "Google":
                                if (config.IsGoogleConfigured())
                                {
                                    <button class="btn btn-block btn-googleplus-inversed rounded" type="submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                        <i class="fa fa-google-plus"></i> Google
                                    </button>
                                }
                                break;
                            default:
                                break;
                        }
                    }
                </p>
            </div>
        </form>
    }
}
