@inject IContentRepository _content
@{
    BasicSettings _basicSettings = Engine.Settings.Basic;
    var path = Context.Request.Path.ToString().ToLower();
}
<nav class="main">
    <div class="container">
        <ul class="nav navbar-nav main">
            @{
                var pages = await _content.GetContentAsync(new ContentModel()
                {
                    Category = "main-menu",
                    Type = "page",
                    PageSize = 999,
                    Order = "Meta:Custom.DisplayOrder"
                });
            }
            @if (pages.TotalCount > 0)
            {
                @foreach (var pg in pages.List)
                {
                    <li class="@(path == pg.Url ? "highlight" : "")">
                        <a href="@pg.Url">
                            @pg.Title
                        </a>
                    </li>
                }
            }
            @if (Engine.Settings.Forum.Enabled)
            {
                <li><a asp-action="Index" asp-controller="Forum">Forums</a></li>
            }
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Content <span class="caret"></span></a>
                <div class="dropdown-menu full">
                    <div class="container">
                        <div class="row">
                            <div class="col-sm-4">
                                <h3>Enabled Content</h3>
                                <p>This is a mega menu, full width menu dropdown that can be used to house multiple links for your site. Breaking content down into key areas.</p>
                            </div>
                            <div class="col-sm-3 col-sm-offset-1 links">
                                <ul>
                                    @{
                                        var _propertySettings = Engine.Settings.Property;
                                        var sideTypes = Engine.Settings.Content.AllowedTypes;
                                        if (_propertySettings.Enabled)
                                        {
                                            sideTypes.Add(new ContentType() { Type = "property", Title = _propertySettings.Title, TypeNamePlural = _propertySettings.Plural, Slug = _propertySettings.Slug, IsPublic = true });
                                        }
                                        sideTypes = sideTypes.OrderBy(t => t.TypeNamePlural).ToList();
                                    }
                                    @foreach (ContentType ct in sideTypes)
                                    {
                                        if (ct.IsPublic)
                                        {
                                            <li><a href="@string.Format("/{0}/", ct.Slug)">@ct.Title</a></li>
                                        }
                                    }
                                </ul>
                            </div>
                            <div class="col-sm-3 col-sm-offset-1 links">
                                <ul>
                                    <li><a asp-action="Index" asp-controller="Forum">Forums</a></li>
                                    <li><a asp-action="Index" asp-controller="Subscriptions">Member's Area</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        </ul>
        <ul class="nav navbar-nav login">
            @if (User.Identity.IsAuthenticated)
            {
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        <i class="fa fa-user m-r-xs"></i>Account
                    </a>
                    <div class="dropdown-menu full">
                        <div class="container">
                            @{ await Html.RenderPartialAsync("_Header_Menu_Account"); }
                        </div>
                    </div>
                </li>
            }
            else
            {
                <li>
                    <a asp-action="Login" asp-controller="Account" asp-route-returnurl="@Context.Request.Path">Login</a>
                </li>
                <li>
                    <a asp-action="Register" asp-controller="Account" asp-route-returnurl="@Context.Request.Path" class="signup">Create account</a>
                </li>
            }
        </ul>
    </div>
</nav>
