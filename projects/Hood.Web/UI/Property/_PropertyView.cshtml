@model ShowPropertyModel
@{
    PropertySettings _propertySettings = Engine.Settings.Property;
}
<section class="hero">
    <fixedImage src="@Model.Property.FeaturedImage.LargeUrl" class="background-image hood-image"></fixedImage>
    <div class="intro">
        <div class="container">
            <div class="row">
                <div class="col-md-7 col-md-offset-1">
                    <h1>@Model.Property.Title<br /><small>@Model.Property.ListingType</small></h1>
                    <p class="lead">@Html.Raw(Model.Property.ShortDescription)</p>
                    <p>
                        @if (Model.Property.InfoDownloadJson.IsSet())
                        {
                            <a class="btn btn-default" href="@Model.Property.InfoDownload.DownloadUrl"><i class="fa fa-file-pdf-o"></i> Download info pack</a>
                        }
                        <a class="btn btn-default" href="@string.Format("/contact?subject={0}", Model.Property.ToFormat(AddressFormat.SingleLine))">Enquire <i class="fa fa-long-arrow-right"></i></a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="container m-t-lg">
    <div class="row">
        <div class="col-sm-4">
            <a href="@Model.Property.FeaturedImage.LargeUrl" class="colorbox"><img src="@Model.Property.FeaturedImage.MediumUrl" class="img img-full content-feature-@Model.Property.Id m-b-xs" /></a>
            <div class="gallery">
                @foreach (var media in Model.Property.Media)
                {
                    <a href="@media.LargeUrl" class="colorbox"><fixedImage src="@media.SmallUrl" class="img-xs content-feature-@media.Id m-b-xs"></fixedImage></a>
                }
            </div>
            <div class="p-md bg-color-lighten text-center">
                <p>
                    @Html.Raw(Model.Property.ToFormat(AddressFormat.MultiLine))
                </p>
                <a class="btn btn-block m-t-lg btn-default" href="@string.Format("/contact?subject={0}", Model.Property.ToFormat(AddressFormat.SingleLine))">Enquire <i class="fa fa-long-arrow-right"></i></a>
                @if (Model.Property.InfoDownloadJson.IsSet())
                {
                    <a class="btn btn-block btn-default m-t-lg" href="@Model.Property.InfoDownload.DownloadUrl"><i class="fa fa-file-pdf-o"></i> Download info pack</a>
                }
            </div>
            <div class="p-md bg-color-lighten m-t-xs">
                <ul class="media-list no-margin">
                    @if (Model.Property.Rent.HasValue)
                    {
                        <li class="media">
                            <div class="media-left">
                                <i class="fa fa-money fa-2x"></i>
                            </div>
                            <div class="media-body">
                                <h4 class="no-margin">Rent</h4>
                                <p>@string.Format(Model.Property.RentDisplay, Model.Property.FormattedRent)</p>
                            </div>
                        </li>

                    }
                    @if (Model.Property.AskingPrice.HasValue)
                    {
                        <li class="media">
                            <div class="media-left">
                                <i class="fa fa-money fa-2x"></i>
                            </div>
                            <div class="media-body">
                                <h4 class="no-margin">Asking Price</h4>
                                <p>@string.Format(Model.Property.AskingPriceDisplay, Model.Property.FormattedAskingPrice)</p>
                            </div>
                        </li>
                    }
                    @if (Model.Property.Premium.HasValue)
                    {
                        <li class="media">
                            <div class="media-left">
                                <i class="fa fa-money fa-2x"></i>
                            </div>
                            <div class="media-body">
                                <h4 class="no-margin">Premium</h4>
                                <p>@string.Format(Model.Property.PremiumDisplay, Model.Property.FormattedPremium)</p>
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <div class="p-md bg-color-lighten m-t-xs">
                <h4 class="no-margin">Areas</h4>
                <hr />
                @if (Model.Property.FloorAreas?.Count > 0)
                {
                    @foreach (var floor in Model.Property.FloorAreas)
                    {
                        <div class="row m-b-xs">
                            <div class="col-xs-4"><strong>@floor.Name</strong></div>
                            <div class="col-xs-8">
                                @floor.SquareMetres.ToString("N0") m<sup>2</sup>
                                [@floor.SquareFeet.ToString("N0") sq. ft.]
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="no-margin">There are no floor areas added yet...</p>
                }
            </div>
        </div>
        <div class="col-sm-8">
            <div class="m-b-md">
                <h2>@Model.Property.Title</h2>
                <p class="lead">@Html.Raw(Model.Property.ShortDescription)</p>
            </div>
            <blockquote>
                <h5 class="no-margin">@_propertySettings.GetPlanningFromType(Model.Property.Planning)</h5>
                <p class="m-t-sm">
                    @if (Model.Property.InfoDownloadJson.IsSet())
                    {
                        <a class="btn btn-default" href="@Model.Property.InfoDownload.DownloadUrl"><i class="fa fa-file-pdf-o"></i> Download info pack</a>
                    }
                    <a class="btn  btn-default" href="@string.Format("/contact?subject={0}", Model.Property.ToFormat(AddressFormat.SingleLine))">Enquire <i class="fa fa-long-arrow-right"></i></a>
                </p>
            </blockquote>
            <h5>Description</h5>
            @if (Model.Property.Description.IsSet())
            {
                <blockquote class="pre-line">@Html.Raw(Model.Property.Description)</blockquote>
            }
            else
            {
                <blockquote>No description has been added to this property yet...</blockquote>
            }
            @if (Model.Property.Location.IsSet())
            {
                <h5>About the Location</h5>
                <blockquote class="pre-line">@Html.Raw(Model.Property.Location)</blockquote>
            }
            @if (Model.Property.Lease.IsSet())
            {
                <h5>About the Lease</h5>
                <blockquote class="pre-line">@Html.Raw(Model.Property.Lease)</blockquote>
            }
            @if (Model.Property.Areas.IsSet())
            {
                <h5>About the Internal Areas</h5>
                <blockquote class="pre-line">@Html.Raw(Model.Property.Areas)</blockquote>
            }
            @if (Model.Property.Additional.IsSet())
            {
                <h5>Additional Information</h5>
                <blockquote class="pre-line">@Html.Raw(Model.Property.Additional)</blockquote>
            }
            <h5>Contact the Agent</h5>
            @if (Model.Property.AgentInfo.IsSet())
            {
                <blockquote class="pre-line">
                    @Html.Raw(Model.Property.AgentInfo)
                </blockquote>
            }
        </div>
    </div>
    @if (Model.Similar != null && Model.Similar.Count > 0)
    {
        <div class="row">
            <h4>Some of our other properties</h4>
            <div class="portfolio-carousel owl-carousel owl-theme">
                <div class="col-md-4 col-sm-6 col-xs-12 mb-30">
                    @foreach (var similar in Model.Similar)
                    {
                        <partial name="_PropertyView" model="similar" />
                    }
                </div>
            </div>
        </div>
    }
</div>
