@model ContentModel
@{
    Layout = "_Blank";

    ViewData["Content"] = Model.Content;

    SeoSettings _seoSettings = Engine.Settings.Seo;
    BasicSettings _basicSettings = Engine.Settings.Basic;

    string seoTitle = Model.Content.GetMetaValue<string>("SEO.Meta.Title");
    string seoDescription = Model.Content.GetMetaValue<string>("SEO.Meta.Description");
    string title = Model.Content.Title + " - " + _basicSettings.FullTitle;
    string description = Model.Content.Excerpt;
    if (!seoTitle.IsSet())
    {
        title = seoTitle;
    }
    if (!seoDescription.IsSet())
    {
        description = seoDescription;
    }
    ViewBag.Title = title;

    ViewData["EditUrl"] = Url.Action("Edit", "Content", new { area = "Admin", id = Model.Content.Id });

    if (Model.ContentType.ShowDesigner)
    {
        ViewData["DesignerUrl"] = string.Format("{0}?editMode=true", Model.Content.Url);
        ViewData["ExitDesignerUrl"] = Model.Content.Url;
    }

    @switch (Model.ContentType.BaseName)
    {
        case "FAQ":
            Layout = "_FaqLayout";
            break;
        case "News":
            Layout = "_NewsLayout";
            break;
        case "Page":
            Layout = "_Page";
            break;
        case "Portfolio":
            Layout = "_PortfolioLayout";
            break;
        case "Product":
            Layout = "_ProductLayout";
            break;
        case "Team":
            Layout = "_TeamLayout";
            break;
        case "Testimonial":
            Layout = "_TestimonialLayout";
            break;
        default:
            break;
    }
    string template = null;
    if (Model.ContentType.Templates)
    {
        template = Model.Content.GetMeta("Settings.Template").Get<string>();
        if (template.IsSet())
        {
            Layout = template;
        }
    }

    string url = Context.GetSiteUrl(true, true);
    if (_seoSettings.CanonicalUrl.IsSet())
    {
        url = string.Format("{0}{1}", _seoSettings.CanonicalUrl.TrimEnd('/'), Context.Request.Path);
    }
}
@section metas {
    <meta name="description" content="@description" />
    <meta property="og:author" content="@Model.Content.Author.ToDisplayName()" />
    <meta property="og:title" content="@title" />
    @if (Model.Content.ShareImage.DownloadUrl.IsSet())
    {
        <meta property="og:image" content="@Model.Content.ShareImage.LargeUrl" />
        <meta property="og:image:secure_url" content="@Model.Content.ShareImage.LargeUrl" />
        <meta name="twitter:image" content="@Model.Content.ShareImage.LargeUrl" />
    }
    else if (Model.Content.FeaturedImage.DownloadUrl.IsSet())
    {
        <meta property="og:image" content="@Model.Content.FeaturedImage.LargeUrl" />
        <meta property="og:image:secure_url" content="@Model.Content.FeaturedImage.LargeUrl" />
        <meta name="twitter:image" content="@Model.Content.FeaturedImage.LargeUrl" />
    }
    else
    {
        <meta property="og:image" content="@_seoSettings.OgImageUrl" />
        <meta property="og:image:secure_url" content="@_seoSettings.OgSecureImageUrl" />
        <meta name="twitter:image" content="@_seoSettings.TwitterCardImageUrl" />
    }
    <meta property="og:description" content="@description" />
    <meta name="twitter:title" content="@title" />
    <meta name="twitter:description" content="@description" />
}
@if (template.IsSet())
{
    if (Model.Content.Body.IsSet())
    {
        <partial name="_EditableContent" />
    }
    else
    {
        <alert type="Info">Nothing to see here just yet.</alert>
    }
}
else
{
    switch (Model.ContentType.BaseName)
    {
        case "Event":
            <partial name="_EventView" />
            break;
        case "Faq":
            <partial name="_FaqView" />
            break;
        case "Job":
            <partial name="_JobView" />
            break;
        case "Portfolio":
            <partial name="_PortfolioView" />
            break;
        case "Product":
            <partial name="_ProductView" />
            break;
        case "Team":
            <partial name="_TeamView" />
            break;
        case "Testimonial":
            <partial name="_TestimonialView" />
            break;
        case "Page":
            <partial name="_EditableContent" />
            break;
        case "News":
        default:
            <partial name="_NewsView" />
            break;
    }
}
