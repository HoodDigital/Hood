@model UserSearchModel
@{ 
    string baseUrl = "admin/users";
    string urlFormat = "/{0}?CurrentPage={1}{2}";
    var query = "&PageSize=" + Model.PageSize;
    query += Model.Search.IsSet() ? "&Search=" + Model.Search : "";
    query += Model.Role.IsSet() ? "&Role=" + Model.Role : "";
    query += Model.Sort.IsSet() ? "&Sort=" + Model.Sort : "";
}
<div div class="m-lg text-center">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li><a href="@string.Format(urlFormat, baseUrl, 1, query)" aria-label="Previous"><span aria-hidden="true"><i class="fa fa-angle-double-left"></i></span></a></li>
            <li><a href="@string.Format(urlFormat, baseUrl, Model.CurrentPage - 1, query)" aria-label="Previous"><span aria-hidden="true"><i class="fa fa-angle-left"></i></span></a></li>
        }
        @for (int i = Model.CurrentPage - 2; i <= Model.CurrentPage + 2; i++)
        {
            if (i > 0 && i <= Model.Pages)
            {
                if (i == Model.CurrentPage)
                {
                    <li class="active"><a href="@string.Format(urlFormat, baseUrl, i, query)">@i</a></li>
                }
                else
                {
                    <li><a href="@string.Format(urlFormat, baseUrl, i, query)">@i</a></li>
                }
            }
        }
        @if (Model.CurrentPage < Model.Pages)
        {
            <li><a href="@string.Format(urlFormat, baseUrl, Model.CurrentPage + 1, query)" aria-label="Next"><span aria-hidden="true"><i class="fa fa-angle-right"></i></span></a></li>
            <li><a href="@string.Format(urlFormat, baseUrl,  Model.Pages + 1, query)" aria-label="Next"><span aria-hidden="true"><i class="fa fa-angle-double-right"></i></span></a></li>
        }
    </ul>
</div>
