@inject IThemesService themesSource
@{
    var theme = themesSource.Current;
    ViewData["Title"] = "Site Theme";
    if (theme != null)
    {
        ViewData["Title"] = "Site Theme: " + theme["ThemeFullName"];
    }
}
<div class="row">
    <div class="col-sm-8">
        <div class="wrapper wrapper-content">
            <div class="ibox">
                <div class="ibox-title">
                    <div class="row m-b-sm m-t-sm">
                        @foreach (KeyValuePair<string, IConfiguration> themeSel in themesSource.ThemeConfigs)
                        {
                            string activeClass = "";
                            bool active = false;
                            try
                            {
                                var themeConf = themeSel.Value;
                                active = theme["name"] == themeConf["Name"];
                                if (active)
                                {
                                    activeClass = "active";
                                }
                            }
                            catch { }
                            <div class="col-md-6 col-lg-4">
                                <div class="theme-selector @activeClass">
                                    <div class="theme-selector-image" style="background-image:url(@themeSel.Value["PreviewImage"]);">
                                        <img src="@themeSel.Value["PreviewImage"]" alt="@themeSel.Value["ThemeFullName"]" />
                                    </div>
                                    <div class="theme-selector-title">
                                        @if (!active)
                                        {
                                            <a class="pull-right btn-primary btn btn-sm activate-theme" data-name="@themeSel.Value["name"]">Activate</a>
                                        }
                                        <h3>@themeSel.Value["ThemeFullName"] <small>(@themeSel.Value["name"])</small></h3>
                                        <p>by <strong>@themeSel.Value["Author"]</strong></p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="right-column">
            @if (theme != null)
            {
                <div class="editor-box">
                    <h4>Current theme: <strong>@theme["Name"]</strong></h4>
                    <p>@theme["ThemeFullName"]</p>
                </div>
            }
            else
            {
                <div class="editor-box">
                    <h4>There is no theme currently active.</h4>
                    <h5>Theme currently selected: @_settings["Hood.Settings.Theme"]</h5>
                    <p>There is no active theme currently, this could be due to no theme being selected, or an issue with the installation of the currently selected theme.</p>
                </div>
            }
            @if (_settings != null)
            {
                <div class="editor-box">
                    <h5>Holding Page</h5>
                    <p>You can activate a holding page, which will show instead of the site, this is useful prelaunch.</p>
                    <p class="text-warning">This feature is currently disabled. Please contact Hood for more information.</p>
                    @*<p>
                            @if (config["Settings.HoldingPage"] == "true")
                            {
                                <a class="pull-right btn-danger btn-block btn btn-sm update-site-setting" data-name="Settings.HoldingPage" data-value="false">De-activate Holding Page</a>
                            }
                            else
                            {
                                <a class="pull-right btn-primary btn-block btn btn-sm update-site-setting" data-name="Settings.HoldingPage" data-value="true">Activate Holding Page</a>
                            }
                        </p>*@
                </div>
                <div class="editor-box">
                    <h5>Under Construction Page</h5>
                    <p>You can activate an Under Construction page, which will show instead of the site, this is useful during maintenance periods.</p>
                    <p class="text-warning">This feature is currently disabled. Please contact Hood for more information.</p>
                    @*<p>
                            @if (config["Settings.MaintenancePage"] == "true")
                            {
                                <a class="pull-right btn-danger btn-block btn btn-sm update-site-setting" data-name="Settings.MaintenancePage" data-value="false">De-activate Maintenance Page</a>
                            }
                            else
                            {
                                <a class="pull-right btn-primary btn-block btn btn-sm update-site-setting" data-name="Settings.MaintenancePage" data-value="true">Activate Maintenance Page</a>
                            }
                        </p>*@
                </div>
            }
        </div>
    </div>
</div>
