@model ContentModel
@inject ContentCategoryCache _categories
@{
    Layout = null;
    var categories = _categories.TopLevel(Model.ContentType.Type);
}
@if (Model.List.Count > 0)
{
    <div>
        @foreach (var content in Model.List)
        {
            <div class="card hover mb-3">
                <div class="row no-gutters align-items-stretch">
                    @if (Model.ContentType.ShowImage)
                    {
                        <div class="col-2">
                            <a asp-action="Edit" asp-route-id="@content.Id">
                                <fixedImage src="@content.FeaturedImage.ThumbUrl" class="img m-0 w-100 h-100 overflow-hidden" alt="@content.Title"></fixedImage>
                            </a>
                        </div>
                    }
                    <div class="col">
                        <div class="card-body">
                            <h5 class="card-title">
                                <a asp-action="Edit" asp-route-id="@content.Id">@content.Title</a>
                            </h5>
                            <p class="card-text mb-1">
                                @content.Status.ToHtml()
                            </p>
                            <p class="card-text mb-1">
                                <small class="d-block">
                                    Author:
                                    <strong>@content.Author.ToFullName()</strong>
                                </small>
                            </p>
                            <p class="card-text mb-1">
                                <small class="d-block">Created on <i class="fa fa-clock-o"></i> @content.CreatedOn.ToDisplay()</small>
                                @if (Model.ContentType.HasPage)
                                {
                                    <small class="d-block font-bold"><a href="@content.Url" target="_blank">@content.Url</a></small>
                                }
                            </p>
                            <p class="card-text mb-0">
                                @if (content.Categories.Count == 0)
                                {
                                    <span class="badge badge-light">Not in a category.</span>
                                }
                                @foreach (var category in content.Categories)
                                {
                                    <span class="badge badge-light">@category.Category.DisplayName</span>
                                }
                            </p>
                        </div>
                    </div>
                    <div class="col-auto d-flex align-items-center">
                        <button type="button" class="btn btn-lg shadow-none v-middle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fa fa-ellipsis-v"></i>
                        </button>
                        <div class="dropdown-menu dropdown-menu-right">
                            <a class="dropdown-item" asp-action="Edit" asp-route-id="@content.Id">
                                <i class="fa fa-edit mr-2"></i> 
                                Edit
                            </a>
                            @if (!content.IsHomepage)
                            {
                                @if (Model.ContentType.BaseName == "Page")
                                {
                                    <a class="dropdown-item hood-inline-task" asp-action="Edit" asp-route-id="@content.Id" data-complete="$.hood.Content.Lists.Content.Reload">
                                        <i class="fa fa-home mr-2"></i>
                                        Set as Homepage
                                    </a>
                                }
                            }
                            @if (content.Status == ContentStatus.Published)
                            {
                                <a class="dropdown-item content-set-status" href="@Url.Action("SetStatus", new { id = content.Id, status = ContentStatus.Draft })">
                                    <i class="fa fa-eye-slash mr-2"></i>
                                    Archive
                                </a>
                            }
                            else
                            {
                                <a class="dropdown-item content-set-status" href="@Url.Action("SetStatus", new { id = content.Id, status = ContentStatus.Published })">
                                    <i class="fa fa-thumbs-up mr-2"></i>
                                    Publish
                                </a>
                            }
                            @if (Model.ContentType.HasPage)
                            {
                                <a class="dropdown-item" href="@content.Url" target="_blank">
                                    <i class="fa fa-search mr-2"></i>
                                    Preview
                                </a>
                            }
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item content-delete" asp-action="Delete" asp-route-id="@content.Id">
                                <i class="fa fa-trash-alt mr-2"></i>
                                Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <partial name="_Pagination" />
}
else
{
    <alert type="Info" icon="fa-info" size="Epic" class="text-center">
        There are no @Model.ContentType.TypeNamePlural.ToLower() yet, click "Create New" to add your first @Model.ContentType.TypeName.ToLower().
    </alert>
}
