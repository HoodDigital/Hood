@model ForumSettings
@{
    ViewData["Title"] = "Forum Settings";
    Layout = "_Layout_Settings";
}
@section buttons {
    @if (User.IsAdminOrBetter())
    {
        <a asp-action="ResetForum" class="btn btn-danger warning-alert" data-warning="This will completely reset these settings to their default state, are you sure!?"><i class="fa fa-refresh"></i> Reset to Default</a>
    }
}
<div class="card">
    <div class="card-header">
        <div class="row align-items-center">
            <ul class="nav nav-tabs card-header-tabs" role="tablist" id="page-tabs">
                <li class="nav-item">
                    <a class="nav-link active" id="forum-tab" data-toggle="tab" href="#forum" role="tab" aria-controls="forum" aria-selected="false">
                        Forum Settings
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="viewing-tab" data-toggle="tab" href="#viewing" role="tab" aria-controls="viewing" aria-selected="false">
                        Viewing
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="posting-tab" data-toggle="tab" href="#posting" role="tab" aria-controls="posting" aria-selected="false">
                        Posting
                    </a>
                </li>
            </ul>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="tab-content">
            <div id="forum" class="tab-pane active" role="tabpanel" aria-labelledby="forum-tab">
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input asp-for="Enabled" class="custom-control-input">
                        <label asp-for="Enabled" class="custom-control-label"></label>
                    </div>
                    <small asp-for="Enabled"></small>
                </div>
                <div class="form-group floating-label">
                    <label asp-for="ForumAreaName"></label>
                    <input asp-for="ForumAreaName" class="form-control" />
                    <small asp-for="ForumAreaName"></small>
                </div>
            </div>
            <div id="viewing" class="tab-pane" role="tabpanel" aria-labelledby="viewing-tab">
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input asp-for="ViewingRequiresLogin" class="custom-control-input">
                        <label asp-for="ViewingRequiresLogin" class="custom-control-label"></label>
                    </div>
                    <small asp-for="ViewingRequiresLogin"></small>
                </div>
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input asp-for="ViewingRequiresSpecificSubscription" class="custom-control-input">
                        <label asp-for="ViewingRequiresSpecificSubscription" class="custom-control-label"></label>
                    </div>
                    <small asp-for="ViewingRequiresSpecificSubscription"></small>
                </div>
                <div class="card p-3 mb-3">
                    <label asp-for="ViewingSubscriptions"></label>
                    @if (Engine.Settings.Billing.IsSubscriptionsEnabled && Model.Subscriptions.Count() > 0)
                    {
                        List<string> subs = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(Model.ViewingSubscriptions.IsSet() ? Model.ViewingSubscriptions : "[]");
                        <alert type="Info" size="Small" icon="fa-info-circle">
                            Select subscriptions that can view the forums.<br />
                            <em>If you select none, then then any subscription can (if subscriptions are required).</em>
                        </alert>
                        <input class="form-control checkbox-values" type="hidden" asp-for="ViewingSubscriptions" />
                        @foreach (Subscription sub in Model.Subscriptions.OrderBy(p => p.Amount))
                        {
                            <div class="custom-control custom-checkbox">
                                @if (subs == null || !subs.Contains(sub.StripeId))
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", sub.StripeId)"
                                           data-input="ViewingSubscriptions"
                                           id="ViewingSubscriptions-@sub.StripeId.ToSeoUrl()"
                                           class="custom-control-input" />
                                }
                                else
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", sub.StripeId)"
                                           data-input="ViewingSubscriptions"
                                           id="ViewingSubscriptions-@sub.StripeId.ToSeoUrl()"
                                           checked
                                           class="custom-control-input" />
                                }
                                <label for="ViewingSubscriptions-@sub.StripeId.ToSeoUrl()" class="custom-control-label">
                                    @sub.Name
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <alert type="Danger" size="Small" icon="fa-times-circle" class="m-0">
                            Subscriptions are not enabled, or none are available to use.
                        </alert>
                    }
                </div>
                <div class="card p-3">
                    <label asp-for="ViewingRoles"></label>
                    @if (Model.Roles.Count() > 0)
                    {
                        List<string> roles = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(Model.ViewingRoles.IsSet() ? Model.ViewingRoles : "[]");
                        <alert type="Info" size="Small" icon="fa-info-circle">
                            Select roles that can ALWAYS view the forums.<br />
                            <em>These roles will not require a subscription to access the forums, even if a specific forum requires it.</em>
                        </alert>
                        <input class="form-control checkbox-values" type="hidden" asp-for="ViewingRoles" />
                        @foreach (IdentityRole role in Model.Roles.OrderBy(p => p.Name))
                        {
                            <div class="custom-control custom-checkbox">
                                @if (roles == null || !roles.Contains(role.Name))
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", role.Name)"
                                           data-input="ViewingRoles"
                                           id="ViewingRoles-@role.Name.ToSeoUrl()"
                                           class="custom-control-input" />
                                }
                                else
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", role.Name)"
                                           data-input="ViewingRoles"
                                           id="ViewingRoles-@role.Name.ToSeoUrl()"
                                           checked
                                           class="custom-control-input" />
                                }
                                <label for="ViewingRoles-@role.Name.ToSeoUrl()" class="custom-control-label">
                                    @role.Name
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <alert type="Danger" size="Small" icon="fa-times-circle" class="m-0">
                            No roles can be found to use.
                        </alert>
                    }
                </div>
            </div>
            <div id="posting" class="tab-pane" role="tabpanel" aria-labelledby="posting-tab">
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input asp-for="PostingRequiresLogin" class="custom-control-input">
                        <label asp-for="PostingRequiresLogin" class="custom-control-label"></label>
                    </div>
                    <small asp-for="PostingRequiresLogin"></small>
                </div>
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <input asp-for="PostingRequiresSpecificSubscription" class="custom-control-input">
                        <label asp-for="PostingRequiresSpecificSubscription" class="custom-control-label"></label>
                    </div>
                    <small asp-for="PostingRequiresSpecificSubscription"></small>
                </div>
                <div class="card p-3 mb-3">
                    <label asp-for="PostingSubscriptions"></label>
                    @if (Model.Subscriptions.Count() > 0)
                    {
                        List<string> subs = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(Model.PostingSubscriptions.IsSet() ? Model.PostingSubscriptions : "[]");
                        <alert type="Info" size="Small" icon="fa-info-circle">
                            Select subscriptions that can post on the forums.<br />
                            <em>If you select none, then then any subscription can (if subscriptions are required).</em>
                        </alert>
                        <input class="form-control checkbox-values" type="hidden" asp-for="PostingSubscriptions" />
                        @foreach (Subscription sub in Model.Subscriptions.OrderBy(p => p.Amount))
                        {
                            <div class="custom-control custom-checkbox">
                                @if (subs == null || !subs.Contains(sub.StripeId))
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", sub.StripeId)"
                                           data-input="PostingSubscriptions"
                                           id="PostingSubscriptions-@sub.StripeId.ToSeoUrl()"
                                           class="custom-control-input" />
                                }
                                else
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", sub.StripeId)"
                                           data-input="PostingSubscriptions"
                                           id="PostingSubscriptions-@sub.StripeId.ToSeoUrl()"
                                           checked
                                           class="custom-control-input" />
                                }
                                <label for="PostingSubscriptions-@sub.StripeId.ToSeoUrl()" class="custom-control-label">
                                    @sub.Name
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <alert type="Danger" size="Small" icon="fa-times-circle" class="m-0">
                            Subscriptions are not enabled, or none are available to use.
                        </alert>
                    }
                </div>
                <div class="card p-3">
                    <label asp-for="PostingRoles"></label>
                    @if (Model.Roles.Count() > 0)
                    {
                        List<string> roles = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(Model.PostingRoles.IsSet() ? Model.PostingRoles : "[]");
                        <alert type="Info" size="Small" icon="fa-info-circle">
                            Select roles that can ALWAYS post in the forums.<br />
                            <em>These roles will not require a subscription to post in the forums, even if a specific forum requires it.</em>
                        </alert>
                        <input class="form-control checkbox-values" type="hidden" asp-for="PostingRoles" />
                        @foreach (IdentityRole role in Model.Roles.OrderBy(p => p.Name))
                        {
                            <div class="custom-control custom-checkbox">
                                @if (roles == null || !roles.Contains(role.Name))
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", role.Name)"
                                           data-input="PostingRoles"
                                           id="PostingRoles-@role.Name.ToSeoUrl()"
                                           class="custom-control-input" />
                                }
                                else
                                {
                                    <input type="checkbox"
                                           value="@string.Format("{0}", role.Name)"
                                           data-input="PostingRoles"
                                           id="PostingRoles-@role.Name.ToSeoUrl()"
                                           checked
                                           class="custom-control-input" />
                                }
                                <label for="PostingRoles-@role.Name.ToSeoUrl()" class="custom-control-label">
                                    @role.Name
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <alert type="Danger" size="Small" icon="fa-times-circle" class="m-0">
                            No roles can be found to use.
                        </alert>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
