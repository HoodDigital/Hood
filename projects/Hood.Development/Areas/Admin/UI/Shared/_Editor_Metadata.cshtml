@model IMetadata
@switch (Model.Name)
{

    case "Settings.CSS.BodyClass":
        <div class="form-floating mb-3">
            <input id="@Model.InputId"
                   name="@Model.InputName"
                   type="hidden"
                   value="@Model.GetStringValue()"
                   placeholder="@Model.InputDisplayName"
                   class="form-control" />
            <label for="@Model.InputId">@Model.InputDisplayName</label>
        </div>
        break;

    case "Settings.Image.Align":
    case "Settings.Image.Featured.Align":
        <div class="form-floating mb-3">
            <select class="form-select"
                    data-selected="@Model.GetStringValue()"
                    id="@Model.InputId"
                    name="@Model.InputName">
                <option value="top left">Top Left</option>
                <option value="top center">Top Center</option>
                <option value="top right">Top Right</option>
                <option value="center">Centered</option>
                <option value="bottom left">Bottom Left</option>
                <option value="bottom center">Bottom Centered</option>
                <option value="bottom right">Bottom Right</option>
            </select>
            <label for="@Model.InputId">@Model.InputDisplayName</label>
        </div>
        break;

    case "Settings.Image.Fit":
    case "Settings.Image.Featured.Fit":
        <div class="form-floating mb-3">
            <select class="form-select"
                    data-selected="@Model.GetStringValue()"
                    id="@Model.InputId"
                    name="@Model.InputName">
                <option value="100%">Full width, automatic height</option>
                <option value="left">Automatic width, automatic height, left aligned.</option>
                <option value="center">Automatic width, automatic height, centre aligned.</option>
                <option value="right">Automatic width, automatic height, right aligned.</option>
                <option value="auto">Auto sized (Image will not be resized, in a fixed block)</option>
                <option value="contain">Fit (Image will not overstep the edge, in a fixed block)</option>
                <option value="cover">Fill (Image will fill the space automatically, in a fixed block)</option>
                <option value="100% 100%">Stretch (Image will distort to fill the space, in a fixed block)</option>
            </select>
            <label for="@Model.InputId">@Model.InputDisplayName</label>
        </div>
        break;

    case "Settings.Image.Background":
    case "Settings.Image.Featured.Background":
        <div class="form-floating mb-3">
            <label for="@Model.InputId">@Model.InputDisplayName</label>
            <input id="@Model.InputId"
                   name="@Model.InputName"
                   value="@Model.GetStringValue()"
                   placeholder="@Model.InputDisplayName"
                   class="form-control colorpicker" />
            <small class="text-info form-text">
                Use this to set a colour background for the image area when an image is not present, or the image has transparent areas. Use CSS colours or hex/rgb.
            </small>
        </div>
        break;

    default:

        switch (Model.InputType)
        {
            case "System.DateTime":
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="datetime-local"
                           value="@(Model.GetValue<DateTime>().ToString("yyyy-MM-ddThh:mm"))"
                           placeholder="@Model.InputDisplayName"
                           class="form-control" />
                    <label for="@Model.InputId">@Model.InputDisplayName</label>
                    <small class="text-info form-text">
                        Enter a date and time.
                    </small>
                </div>
                break;

            case "Hood.Time":
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="time"
                           value="@(Model.GetValue<DateTime>().ToString("hh:mm"))"
                           placeholder="@Model.InputDisplayName"
                           class="form-control" />
                    <label for="@Model.InputId">@Model.InputDisplayName</label>
                    <small class="text-info form-text">
                        Enter a time.
                    </small>
                </div>
                break;

            case "Hood.Date":
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="date"
                           value="@(Model.GetValue<DateTime>().ToString("yyyy-MM-dd"))"
                           placeholder="@Model.InputDisplayName"
                           class="form-control" />
                    <label for="@Model.InputId">@Model.InputDisplayName</label>
                </div>
                break;

            case "System.Boolean":
                <div class="mb-3">
                    <div class="form-check form-switch">
                        <input class="form-check-input" id="@Model.InputId" name="@Model.InputName" type="checkbox">
                        <label class="form-check-label d-block" for="@Model.InputId">@Model.InputDisplayName</label>
                    </div>
                </div>
                break;
            case "Hood.YesNo":
                <div class="form-floating mb-3">
                    <select data-selected="@Model.GetStringValue()" class="form-control" id="@Model.InputId" name="@Model.InputName">
                        <option value="true">Yes</option>
                        <option value="false">No</option>
                    </select>
                    <label for="@Model.InputId">@Model.InputDisplayName</label>
                </div>
                break;

            case "MultiLine":
            case "Hood.MultiLineString":
                <div class="form-floating mb-3">
                    <textarea id="@Model.InputId"
                              name="@Model.InputName"
                              class="form-control"
                              placeholder="@Model.InputDisplayName">@Model.GetStringValue()</textarea>
                    <label for="@Model.InputId">@Model.InputDisplayName</label>
                </div>
                break;

            case "FileUrl":
            case "MediaUrl":
            case "File":
            case "Media":
                <div class="image-editor mb-3">
                    <div class="row no-gutter align-items-center">
                        <div class="col-auto pr-0">
                            <figure class="img img-xs border-3 border-white shadow-sm @Model.InputId" style="background-image:url(@Model.GetStringValue());background-size:contain;">
                                <img src="@Model.GetStringValue()" alt="">
                            </figure>
                        </div>
                        <div class="col">
                            <div class="form-floating">
                                <input type="url" class="form-control @Model.InputId valid"
                                       placeholder="@Model.InputDisplayName"
                                       id="@Model.InputId"
                                       name="@Model.InputName"
                                       value="@Model.GetStringValue()">
                                <label for="Logo">@Model.InputDisplayName</label>
                            </div>
                        </div>
                        <div class="col-auto pl-0">
                            <button class="btn btn-dark btn-lg hood-media-select"
                                    data-url="@Url.Action("Action", "Media", new { doAction = "Select", tag = $".{Model.InputId}" })"
                                    data-target=".@Model.InputId"
                                    type="button">
                                <i class="fa fa-camera fa-2x"></i>
                            </button>
                        </div>
                    </div>
                </div>
                break;

            case "Avatar":
            case "Image":
            case "ImageUrl":
            case "Picture":
            case "PictureUrl":
            case "Hood.Image":
            case "Hood.ImageUrl":
                <div class="image-editor">
                    <div class="row no-gutter align-items-center">
                        <div class="col-auto pr-0">
                            <figure class="img img-xs border-3 border-white shadow-sm @Model.InputId" style="background-image:url(@Model.GetStringValue());background-size:contain;">
                                <img src="@Model.GetStringValue()" alt="">
                            </figure>
                        </div>
                        <div class="col">
                            <div class="form-floating">
                                <input type="url" class="form-control @Model.InputId valid"
                                       placeholder="@Model.InputDisplayName"
                                       id="@Model.InputId"
                                       name="@Model.InputName"
                                       value="@Model.GetStringValue()">
                                <label for="Logo">@Model.InputDisplayName</label>
                            </div>
                        </div>
                        <div class="col-auto pl-0">
                            <button class="btn btn-dark btn-lg hood-media-select"
                                    data-url="@Url.Action("Action", "Media", new { doAction = "Select", tag = $".{Model.InputId}" })"
                                    data-target=".@Model.InputId"
                                    type="button">
                                <i class="fa fa-camera fa-2x"></i>
                            </button>
                        </div>
                    </div>
                </div>
                break;

            case "Body":
            case "Hood.WYSIWYG":
                <div class="form-floating mb-3">
                    <label for="@Model.InputId">@Model.InputDisplayName</label>
                    <textarea id="@Model.InputId"
                              placeholder="@Model.InputDisplayName"
                              name="@Model.InputName"
                              class="tinymce-simple">@Model.GetStringValue()</textarea>
                </div>
                break;

            case "Number":
            case "Integer":
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="number" step="1"
                           placeholder="@Model.InputDisplayName"
                           value="@Model.GetStringValue()"
                           class="form-control" />
                       <label for="@Model.InputId">@Model.InputDisplayName</label>
             </div>
                break;

            case "Currency":
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="number" step="0.01"
                           placeholder="@Model.InputDisplayName"
                           value="@Model.GetStringValue()"
                           class="form-control" />
                       <label for="@Model.InputId">@Model.InputDisplayName</label>
             </div>
                break;

            case "Email":
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="number" step="0.01"
                           placeholder="@Model.InputDisplayName"
                           value="@Model.GetStringValue()"
                           class="form-control" />
                      <label for="@Model.InputId">@Model.InputDisplayName</label>
              </div>
                break;

            default:
                <div class="form-floating mb-3">
                    <input id="@Model.InputId"
                           name="@Model.InputName"
                           type="text"
                           placeholder="@Model.InputDisplayName"
                           value="@Model.GetStringValue()"
                           class="form-control" />
                      <label for="@Model.InputId">@Model.InputDisplayName</label>
              </div>
                break;

        }

        break;
}
