@mixin text-shadow($string: 0 1px 3px rgba(0, 0, 0, .25)) {
    text-shadow: $string;
}

@mixin box-shadow($string) {
    box-shadow: $string;
    box-shadow: $string;
    box-shadow: $string;
}

@mixin drop-shadow($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: .25) {
    box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
    box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
    box-shadow: $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin inner-shadow($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: .25) {
    box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
    box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
    box-shadow: inset $x $y $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin box-sizing($type: border-box) {
    box-sizing: $type;
    box-sizing: $type;
    box-sizing: $type;
}

@mixin border-radius($radius: 5px) {
    background-clip: padding;
    background-clip: padding-box;
    background-clip: padding-box;
    border-radius: $radius;
    border-radius: $radius;
    border-radius: $radius;
}

.zip_code_text {
    height: 0;
    overflow: hidden;
    text-indent: 7000px;
    white-space: nowrap;
}

@mixin border-radiuses($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
    background-clip: padding;
    background-clip: padding-box;
    background-clip: padding-box;
    border-top-left-radius: $topleft;
    border-top-left-radius: $topleft;
    border-top-right-radius: $topright;
    border-top-right-radius: $topright;
    border-bottom-right-radius: $bottomright;
    border-bottom-right-radius: $bottomright;
    border-bottom-left-radius: $bottomleft;
    border-bottom-left-radius: $bottomleft;
    border-radius-topright: $topright;
    border-radius-bottomright: $bottomright;
    border-radius-bottomleft: $bottomleft;
    border-radius-topleft: $topleft;
}

@mixin opacity($opacity: .5) {
    -webkit-opacity: $opacity;
    -moz-opacity: $opacity;
    opacity: $opacity;
}

@mixin gradient($startColor: #eee, $endColor: white) {
    background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background: linear-gradient(top, $startColor, $endColor);
    background: linear-gradient(top, $startColor, $endColor);
    background: linear-gradient(top, $startColor, $endColor);
    background: linear-gradient(top, $startColor, $endColor);
    background-color: $startColor;
}

@mixin horizontal-gradient($startColor: #eee, $endColor: white) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
    background-image: linear-gradient(left, $startColor, $endColor);
    background-image: linear-gradient(left, $startColor, $endColor);
    background-image: linear-gradient(left, $startColor, $endColor);
    background-image: linear-gradient(left, $startColor, $endColor);
}

@mixin animation($name, $duration: 300ms, $delay: 0, $ease: ease) {
    animation: $name $duration $delay $ease;
    animation: $name $duration $delay $ease;
    animation: $name $duration $delay $ease;
}

@mixin transition($transition) {
    transition: $transition;
    transition: $transition;
    transition: $transition;
    transition: $transition;
}

@mixin transform($string) {
    transform: $string;
    transform: $string;
    transform: $string;
    transform: $string;
}

@mixin scale($factor) {
    transform: scale($factor);
    transform: scale($factor);
    transform: scale($factor);
    transform: scale($factor);
}

@mixin rotate($deg) {
    transform: rotate($deg);
    transform: rotate($deg);
    transform: rotate($deg);
    transform: rotate($deg);
}

@mixin skew($deg, $deg2) {
    transform: skew($deg, $deg2);
    transform: skew($deg, $deg2);
    transform: skew($deg, $deg2);
    transform: skew($deg, $deg2);
}

@mixin translate($x, $y: 0) {
    transform: translate($x, $y);
    transform: translate($x, $y);
    transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin translate3d($x, $y: 0, $z: 0) {
    transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}

@mixin perspective($value: 1000) {
    perspective: $value;
    perspective: $value;
    perspective: $value;
    perspective: $value;
}

@mixin transform-origin($x: center, $y: center) {
    transform-origin: $x $y;
    transform-origin: $x $y;
    transform-origin: $x $y;
    transform-origin: $x $y;
}
