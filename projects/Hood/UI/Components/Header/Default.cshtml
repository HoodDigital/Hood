
@inject IContentRepository _content
@model HeaderModel
@{
    BasicSettings _basicSettings = _settings.GetBasicSettings();
    AccountInfo _account = Context.GetAccountInfo();
}
<header class="header" id="header">
    <div class="wrap" id="header-wrap">
        <nav class="navbar navbar-default navbar-fixed-top">
            <div class="container-fluid">
                <div class="navbar-header">
                    <a class="navbar-brand" href="/">
                        @_basicSettings.SiteTitle
                    </a>
                </div>
                <div class="collapse navbar-collapse" id="site-navbar">
                    <ul class="nav navbar-nav">
                        <li><a href="/">Home</a></li>
                        <li><a asp-action="Index" asp-controller="Forum">Forums</a></li>
                        <li><a asp-action="Index" asp-controller="Subscriptions">Member's Area</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Content <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                @{
                                    var _propertySettings = _settings.GetPropertySettings();
                                    var sideTypes = _settings.GetContentSettings().GetAllowedTypes();
                                    if (_propertySettings.Enabled)
                                    {
                                        sideTypes.Add(new ContentType() { Type = "property", Title = _propertySettings.Title, TypeNamePlural = _propertySettings.Plural, Slug = _propertySettings.Slug, IsPublic = true });
                                    }
                                    sideTypes = sideTypes.OrderBy(t => t.TypeNamePlural).ToList();
                                }
                                @foreach (ContentType ct in sideTypes)
                                {
                                    if (ct.IsPublic)
                                    {
                                        <li><a href="@string.Format("/{0}/", ct.Slug)">@ct.Title</a></li>
                                    }
                                }
                            </ul>
                        </li>
                    </ul>

                    <ul class="nav navbar-nav navbar-right">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-user m-r-xs"></i>Account <span class="caret"></span></a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <div class="media p-md">
                                            <div class="media-left">
                                                <fixedImage src="@Model.User.Avatar.SmallUrl" class="img-xs img-circle sidebar-avatar @string.Format("avatar-{0}", Model.User.Id)" />
                                            </div>
                                            <div class="media-body media-middle">
                                                @if (User.IsImpersonating())
                                                {
                                                    <span>Impersonating</span>
                                                }
                                                else
                                                {
                                                    <span>Logged in as</span>
                                                }
                                                <br />
                                                <strong class="font-bold">@Model.User.FullName</strong>
                                            </div>
                                        </div>
                                    </li>
                                    <li class="divider"></li>
                                    @if (_settings.BillingEnabled().Succeeded)
                                    {
                                        <li><a asp-action="Index" asp-controller="Billing"><i class="fa fa-money"></i>Billing</a></li>
                                        @if (_settings.SubscriptionsEnabled().Succeeded)
                                        {
                                            <li><a asp-action="Index" asp-controller="Subscriptions"><i class="fa fa-user-plus"></i>Members Area</a></li>
                                            @if (_account.HasTieredSubscription)
                                            {
                                                <li><a asp-action="Change" asp-controller="Subscriptions"><i class="fa fa-random"></i>Modify your Subscription</a></li>
                                            }
                                        }
                                    }
                                    <li>
                                        <a asp-action="Index" asp-controller="Manage">
                                            <i class="fa fa-cogs m-r-xs"></i>Manage Account
                                        </a>
                                    </li>
                                    <li>
                                        <a asp-action="ChangePassword" asp-controller="Manage">
                                            <i class="fa fa-lock m-r-xs"></i>Change Password
                                        </a>
                                    </li>
                                    <li class="divider"></li>
                                    @if (User.IsImpersonating())
                                    {
                                        <li>
                                            <a asp-action="StopImpersonation" asp-controller="Users" asp-area="Admin" class="admin">
                                                <i class="fa fa-desktop m-r-xs"></i>Stop Impersonating
                                            </a>
                                        </li>
                                        <li class="divider"></li>
                                    }
                                    <li>
                                        <form asp-controller="Account" asp-action="LogOff" asp-area="" method="post" id="logoutForm" class="navbar-right"></form>
                                        <a href="javascript:document.getElementById('logoutForm').submit()">
                                            <i class="fa fa-sign-out m-r-xs"></i>Log out
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a asp-action="Login" asp-controller="Account" asp-route-returnurl="@Context.Request.Path"><i class="fa fa-lock m-r-xs"></i>Login</a>
                            </li>
                            <li>
                                <a asp-action="Register" asp-controller="Account" asp-route-returnurl="@Context.Request.Path"><i class="fa fa-user-plus m-r-xs"></i>Sign up</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </div>
</header>