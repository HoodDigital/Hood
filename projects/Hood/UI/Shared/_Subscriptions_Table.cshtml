@model SubscriptionModel
@inject IAccountRepository _subs
@{
    UserSubscription currentSub = Model.User?.Subscriptions.Where(us => !us.Subscription.Addon && (us.Status == "active" || us.Status == "trialing")).FirstOrDefault();
    ViewData["currentSub"] = currentSub;
    var plans = Model.Plans;
    if (Model.Category.IsSet())
    {
        plans = plans.Where(p => p.Category == Model.Category).ToList();
    }
}
<div class="row">
    @foreach (Subscription plan in plans)
    {
        <div class="col-xs-12 col-sm-6 col-sm-offset-3">
            <div class="thumbnail price">
                <div class="panel-heading  text-center bg-info">
                    <h3>@plan.Name</h3>
                    <p>@plan.FullPrice</p>
                    @if (plan.TrialPeriodDays > 0)
                    {
                        <p>@plan.TrialPeriodDays days free trial</p>
                    }
                    else
                    {
                        <p>No trial period.</p>
                    }
                </div>
                <div class="p-lg text-center">
                    @plan.Description
                </div>
                <div class="panel-footer text-center">
                    @{ await Html.RenderPartialAsync("_Subscriptions_ChargeButton",
                            new ChargeButtonModel()
                            {
                                SubscriptionModel = Model,
                                Subscription = plan,
                                CssClass = "annual",
                                Text = "Select this."
                            }
                        );
                    }
                </div>
            </div>
        </div>
    }
</div>