@model Stripe.Invoice
<div class="panel panel-default no-margin accordion-section">
    <div class="panel-heading accordion-title">
        <a data-toggle="collapse" href="@string.Format("#collapse-invoice-{0}", Model.Id)">
            <span class="pull-right">
                @switch (Model.Status)
                {
                    case "paid":
                        <span class="label label-success">@Model.Status.ToTitleCase()</span>
                        break;
                    case "draft":
                        <span class="label label-warning">@Model.Status.ToTitleCase()</span>
                        break;
                    case "open":
                        <span class="label label-danger">@Model.Status.ToTitleCase()</span>
                        break;
                    case "void":
                        <span class="label label-default">@Model.Status.ToTitleCase()</span>
                        break;
                }
            </span>
            Invoice
            <span>@Model.PeriodEnd.ToDisplay()</span>
        </a>
    </div>
    <div id="@string.Format("collapse-invoice-{0}", Model.Id)" class="panel-collapse accordion-content collapse" role="tabpanel" aria-labelledby="@string.Format("#heading-{0}", Model.Id)">
        <div class="panel-body">
            <p>@Model.Description</p>
            @if (Model.Lines != null && Model.Lines.Data.Count() != 0)
            {
                <table class="table">
                    <tr>
                        <th style="width:80%">Description / Period</th>
                        <th style="width:20%">Amount</th>
                    </tr>
                    @foreach (var item in Model.Lines.Data)
                    {
                        <tr>
                            <td><strong>@item.Description</strong><br />@item.Period.Start.Value.ToShortDateString() - @item.Period.End.Value.ToShortDateString()</td>
                            <td>@item.Amount.ToCurrencyString()</td>
                        </tr>
                    }
                    @if (Model.Tax.HasValue)
                    {
                        <tr>
                            <td class="text-right">Tax:</td>
                            <td><strong>@Model.Tax.Value.ToCurrencyString()</strong></td>
                        </tr>
                    }
                    <tr>
                        <td class="text-right">Total:</td>
                        <td><strong>@Model.Total.ToCurrencyString()</strong></td>
                    </tr>
                    <tr>
                        <td class="text-right">Amount Paid:</td>
                        <td><strong>@Model.AmountPaid.ToCurrencyString()</strong></td>
                    </tr>
                    @if (Model.AmountRemaining > 0)
                    {
                        <tr>
                            <td class="text-right">Amount Remaining:</td>
                            <td><strong>@Model.AmountRemaining.ToCurrencyString()</strong></td>
                        </tr>
                    }
                </table>
            }
            @if (Model.PaymentIntent != null)
            {
                var charge = Model.PaymentIntent.Charges.OrderByDescending(c => c.Created).FirstOrDefault();
                @switch (Model.PaymentIntent.Status)
                {
                    case "succeeded":
                        <alert>
                            @if (charge != null)
                            {
                                <p>
                                    Your card has been charged @Model.PaymentIntent.AmountReceived.Value.ToCurrencyString() on
                                    @charge.Created.ToDisplay()
                                </p>
                            }
                            else
                            {
                                <p>
                                    Your card has been charged @Model.PaymentIntent.AmountReceived.Value.ToCurrencyString() on
                                    @Model.PaymentIntent.Created.Value.ToDisplay()
                                </p>
                            }
                      </alert>
                        break;
                    case "processing":
                        <alert type="Info">
                            Your card payment is currently processing.
                        </alert>
                        break;
                    case "canceled":
                        <alert type="Danger">
                            Your payment has been cancelled.
                        </alert>
                        break;
                    case "requires_payment_method":
                        <alert type="Warning">
                            @if (charge != null)
                            {
                                <p>Your payment was not completed successfully: @charge.FailureMessage</p>
                            }
                            else
                            {
                                <p>Your payment was not completed successfully, the payment method provided did not work.</p>
                            }
                        </alert>
                        break;
                    case "requires_action":
                        <alert type="Warning">
                            <p>Your payment was not completed successfully, you will need to authenticate the transaction further.</p>
                            <p>You will have received an email with further instructions to complete your payment, check your inbox.</p>
                        </alert>
                        break;
                }
            }
            else
            {
                <p>No charge has been attempted.</p>
            }
            @if (Model.Status != "paid")
            {
                if (Model.NextPaymentAttempt.HasValue)
                {
                    <alert>
                        Your payment will be re-attempted at @Model.NextPaymentAttempt.Value.ToString()
                    </alert>
                }
                else
                {
                    <alert>
                        Your payment will not be attempted again.
                    </alert>
                }
            }
        </div>
    </div>
</div>
