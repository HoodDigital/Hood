@model ChargeButtonModel
@if (Model.SubscriptionModel.User == null)
{
    <div class="charge-button">
        <p>@Html.Raw(Model.Text)</p>
        <a class="btn btn-sm btn-primary @Model.CssClass price-select price-button" asp-action="Register" asp-route-returnurl="@Context.Request.Path" asp-controller="Account">
            <span class="price">@Model.Subscription.Price</span>
            <span>per @Model.Subscription.Interval</span>
        </a>
    </div>
}
else
{
    if (!Model.SubscriptionModel.User.HasActiveSubscription(Model.SubscriptionModel.Category))
    {
        if (Context.Request.Path.ToString().Contains("account/subscriptions/change"))
        {
            <div class="charge-button">
                <p>@Html.Raw(Model.Text)</p>
                <a class="btn btn-sm btn-primary @Model.CssClass price-button" asp-action="New" asp-route-category="@Model.SubscriptionModel.Category" asp-route-returnurl="@Context.Request.Path" asp-controller="Subscriptions">
                    <span class="price">@Model.Subscription.Price</span>
                    <span>per @Model.Subscription.Interval</span>
                </a>
            </div>
        }
        else
        {
            <div class="charge-button">
                <p>@Html.Raw(Model.Text)</p>
                <a class="btn btn-sm btn-primary @Model.CssClass price-select price-button" data-target="PlanId" data-value="@Model.Subscription.Id">
                    <span class="price">@Model.Subscription.Price</span>
                    <span>per @Model.Subscription.Interval</span>
                </a>
            </div>
        }
    }
    else
    {
        if (Model.SubscriptionModel.User.IsSubscribed(Model.Subscription.Id))
        {
            UserSubscription sub = Model.SubscriptionModel.User.GetSubscription(Model.Subscription.Id);
            <div class="charge-button">
                <p>
                    You are curently on this package:
                </p>
                <small class="@Model.CssClass text-info price-select price-button active">
                    @if (!sub.CancelAtPeriodEnd)
                    {
                        <span class="text-success">Next Charge:</span>
                        <span class="text-success">@Model.Subscription.Price on @sub.CurrentPeriodEnd.Value.ToShortDateString()</span>
                    }
                    else
                    {
                        <span class="text-danger">Cancelling</span>
                        <span class="text-danger">Cancelling on @sub.CurrentPeriodEnd.Value.ToShortDateString()</span>
                    }
                </small>
            </div>
        }
        else
        {
            UserSubscription sub = Model.SubscriptionModel.User.GetActiveSubscription(Model.SubscriptionModel.Category);
            <div class="charge-button">
                <p>
                    Change to this package:
                </p>
                <a class="btn btn-sm btn-primary @Model.CssClass price-select price-button confirm" 
                   asp-action="Upgrade" asp-route-id="@sub.Id" asp-route-plan="@Model.Subscription.Id"
                   data-warning="Are you sure you want to change your subscription? Your account will be immediately charged for the new subscription, and any trial you have remaining will be removed from your account.">
                    <span class="price">@Model.Subscription.Price</span>
                    <span>per @Model.Subscription.Interval</span>
                </a>
            </div>
        }
    }
}
