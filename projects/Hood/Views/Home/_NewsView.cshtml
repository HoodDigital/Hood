@model ContentModel

@{
    var capi = _settings.ToContentApi(Model.Content);
}
<div class="m-b-lg">
    @{ await Html.RenderPartialAsync("_NeighbourPosts"); }
</div>
<div class="row">
    <div class="col-sm-8">
        <div class="blog-post mb-30">
            <h2>@Model.Content.Title</h2>
            @if (Model.Content.Author != null)
            {
                <p>
                    <span class="m-r-sm"><i class="fa fa-user"></i> <a href="@string.Format("/{0}/author/{1}", Model.Type.Type.ToLower(), Model.Content.Author.UserName)">@Model.Content.Author.FullName</a></span>
                    <span><i class="fa fa-clock-o"></i> @Model.Content.PublishDate.ToLongDateString() at @Model.Content.PublishDate.ToShortTimeString()</span>
                </p>
            }
            <p>@capi.Excerpt</p>
            <p class="text-muted"><em>@Model.Content.TagString</em></p>
            <div class="featured-media">
                @switch (capi.GetMetaValue("Settings.SubType"))
                {
                    case "Video":
                            @if (capi.GetMetaValue("Content.News.Video").IsSet())
                            {
                                @Html.Raw(capi.GetMetaValue("Content.News.Video"));
                            }
                            break;
                        case "Slider":
                            break;
                        default:
                            if (Model.Content.FeaturedImage != null)
                            {
                                <div class="m-b-lg">
                                    <a href="@capi.Url">
                                        @if (Model.Content.GetMeta("Settings.Image.Featured.Fit").GetStringValue() == "100%")
                                        {
                                            <img src="@capi.FeaturedImage.LargeUrl" class="img-full content-feature-@Model.Content.Id" />
                                        }
                                        else
                                        {
                                            <fixedImage src="@capi.FeaturedImage.MediumUrl" class="img-16-9 img-full content-feature-@Model.Content.Id" style="@capi.GetImageStyle()" />
                                        }
                                    </a>
                                </div>
                            }
                            break;
                    }
            </div>
            <p><a href="#post-content" class="scroll-to-target">Read on...</a></p>
            <hr />
            <div id="share"></div>
            <div id="post-content">
                @{ await Html.RenderPartialAsync("_EditableContent"); }
            </div>
            <div id="gallery">
                @foreach (var media in Model.Content.Media)
                {
                    <a class="colorbox m-r-xs" href="@media.Url">
                        <fixedImage src="@media.LargeUrl" class="img-sm"></fixedImage>
                    </a>
                }
            </div>
        </div>
        <hr />
        @{ await Html.RenderPartialAsync("_Author"); }
        <hr />
        @{ await Html.RenderPartialAsync("_Disqus"); }
    </div>
    <div class="col-sm-4">
        @{ await Html.RenderPartialAsync("_Sidebar"); }
    </div>
</div>
<div class="m-t-lg">
    @{ await Html.RenderPartialAsync("_NeighbourPosts"); }
</div>
