@model ContentModel
@inject ISiteConfiguration _site
@{
    var mapi = _site.ToContentApi(Model.Content);
}
<div class="row">
    <div class="col-sm-4">
        <div class="team-item">
            <div class="team-item-img">
                <fixedImage src="@mapi.Author.Avatar.SmallUrl" class="user-profile-image contained content-feature-@Model.Content.Id" alt="@mapi.Author.FullName" />
            </div>
        </div>
    </div>
    <div class="col-sm-8">
        @if (Model.Content.FeaturedImage != null)
        {
            <div class="post-meta"><span>by <a href="@Url.Action("Author", "News", new { author = mapi.Author.UserName.ToLower() })">@mapi.Author.FullName</a>,</span> posted on <span>@Model.Content.PublishDate.ToLongDateString() at @Model.Content.PublishDate.ToShortTimeString()</span></div>
        }
        <div class="post-header">
            <h2>@Model.Content.Title</h2>
        </div>
        <div id="share"></div>
        <div class="post-entry">
            @Html.Raw(Model.Content.Body)
        </div>
    </div>
</div>
