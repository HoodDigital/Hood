@model ListPropertyModel

@{
    ViewData["Title"] = "Properties";
    Layout = "_Layout";

    SeoSettings _seoSettings = _settings.GetSeo();
    BasicSettings _basicSettings = _settings.GetBasicSettings();
    PropertySettings _propertySettings = _settings.GetPropertySettings();
    string url = Context.GetSiteUrl(true, true);
    if (_seoSettings.CanonicalUrl.IsSet())
    {
        url = string.Format("{0}{1}", _seoSettings.CanonicalUrl.TrimEnd('/'), Context.Request.Path);
    }

}
@section metas {
    <meta name="description" content="Have a look a our properties, there are plenty to have a look at!" />
    <meta property="og:author" content="@_seoSettings.OgAuthor" />
    <meta property="og:title" content="Properties - @_basicSettings.SiteTitle" />
    <meta property="og:image" content="@_seoSettings.OgImageUrl" />
    <meta property="og:image:secure_url" content="@_seoSettings.OgSecureImageUrl" />
    <meta property="og:description" content="Have a look a our properties, there are plenty to have a look at!" />
    <meta name="twitter:title" content="Properties - @_basicSettings.SiteTitle" />
    <meta name="twitter:description" content="Have a look a our properties, there are plenty to have a look at!" />
    <meta name="twitter:image" content="@_seoSettings.TwitterCardImageUrl" />
}
<div class="jumbotron">
    <div class="container">
        <h1>Search Properties</h1>
        <h2>Search our property portfolio...</h2>
    </div>
</div>
<section id="search-rental-box">
    @{ await Html.RenderPartialAsync("_PropertySearch"); }
</section>
<div id="clustered-map" class="google-map" style="height:300px;"
     data-lat="@Model.CentrePoint.Latitude"
     data-long="@Model.CentrePoint.Longitude"
     data-zoom="3"
     data-scrollwheel="false"
     data-marker="/lib/hood/images/maps/marker.png"
     data-click="openPropertyModal"
     data-locations="@Newtonsoft.Json.JsonConvert.SerializeObject(Model.Locations)">
</div>
<div class="modal fade" tabindex="-1" role="dialog" id="property-modal">
</div>
<script>
    function openPropertyModal(id) {
        $.get('/property/modal', { id: id }, function (data, textStatus, jqXHR) {
            if (textStatus == 'success') {
                $('#property-modal').empty().html(data).modal();

            } else {
                alert('Failed to load property.');
            }
        });
    }
</script>
<script src="~/lib/hood/src/js/includes/markerclusterer.js"></script>
<div class="container">
    <div class="ptb-60 row">
        <div class="col-sm-6">
            <div class="p-xs">
                Showing <strong>@((Model.Properties.CurrentPage - 1) * Model.Properties.PageSize + 1)</strong> -
                <strong>
                    @if ((Model.Properties.CurrentPage * Model.Properties.PageSize) >= Model.Properties.Count)
                    {
                        @Model.Properties.Count
                    }
                    else
                    {
                        @(Model.Properties.CurrentPage * Model.Properties.PageSize)
                    }
                </strong>
                of @Model.Properties.Count products
            </div>
        </div>
        <div class="col-sm-6 text-right">@{ await Html.RenderPartialAsync("_Pagination"); }</div>
    </div>
    @if (Model.Properties.Count == 0)
    {
        @if (string.IsNullOrEmpty(Model.Filters.search))
        {
            <div class="row text-center">
                <div class="col-md-8 col-md-offset-2">
                    <h3 class="h4">There are no properties to view just yet</h3>
                    <div class="spacer-15"></div>
                    <p class="lead">Please check back later.</p>
                </div>
            </div>
        }
        else
        {
            <div class="row text-center">
                <div class="col-md-8 col-md-offset-2">
                    <h3 class="h4">We couldn't find anything!</h3>
                    <div class="spacer-15"></div>
                    <p class="lead">Your search '@Model.Filters.search' did not return any results. Please try searching for something else.</p>
                </div>
            </div>
        }
    }
    else
    {
        <div class="row">
            @foreach (var content in Model.Properties.Items)
            {
                await Html.RenderPartialAsync("_PropertyCard", content);
            }
        </div>
        <div class="text-center">
            @{   await Html.RenderPartialAsync("_Pagination");}
        </div>
    }
</div>
