@model PropertyListing
@inject IContentRepository _data
@{
    PropertySettings _propertySettings = _settings.GetPropertySettings();
}
<div id="meta" class="tab-pane">
    <div class="panel-body">
        <h5>Attached Metadata</h5>
        @if (Model.Metadata != null)
        {
            <fieldset class="form-horizontal">
@foreach (var meta in Model.Metadata.Where(m => !m.Name.Contains("FloorPlan") && !m.Name.Contains("Feature")).OrderBy(m => m.Name))
                {
                    <div class="form-group">
                        <label for="@string.Format("Meta:{0}", meta.Name)" class="col-sm-3 control-label">
                            @meta.Name.Replace("Custom.", "").ToSentenceCase().CamelCaseToString().Replace(".", " "):
                        </label>
                        <div class="col-sm-9">
                            @{await Html.RenderPartialAsync("_MetaEditor_Default", meta); }
                        </div>
                    </div>
                }
            </fieldset>
        }
    </div>
</div>
