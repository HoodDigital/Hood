@model PropertyListing
@inject IContentRepository _data

@{
    PropertySettings _propertySettings = _settings.GetPropertySettings();
}
<div id="price" class="tab-pane">
    <div class="panel-body">
        <fieldset class="form-horizontal">
            @if (_propertySettings.ShowAskingPrice)
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Asking Price:</label>
                    <div class="col-sm-3">
                        <input asp-for="AskingPrice" type="number" step="0.01" min="0" max="99999999999" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <select class="form-control" asp-for="AskingPriceDisplay">
                            @foreach (string s in System.Text.RegularExpressions.Regex.Split(_propertySettings.PriceDisplays, "\r\n|\r|\n"))
                            {
                                <option value="@s">@string.Format(s, "£X")</option>
                            }
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Asking Price:</label>
                    <div class="col-sm-3">
                        <span class="label label-warning form-control-message"><i class="fa fa-exclamation-triangle m-r-xs"></i>Asking Prices are not enabled.</span>
                    </div>
                </div>
                    <input asp-for="AskingPrice" type="hidden" />
                    <input asp-for="AskingPriceDisplay" type="hidden" />
            }
            @if (_propertySettings.ShowRent)
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Rent:</label>
                    <div class="col-sm-3">
                        <input asp-for="Rent" type="number" step="0.01" min="0" max="99999999999" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <select class="form-control" asp-for="RentDisplay" data-selected="@Model.RentDisplay">
                            @foreach (string s in System.Text.RegularExpressions.Regex.Split(_propertySettings.RentDisplays, "\r\n|\r|\n"))
                            {
                                <option value="@s">@string.Format(s, "£X")</option>
                            }
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Rent:</label>
                    <div class="col-sm-3">
                        <span class="label label-warning form-control-message"><i class="fa fa-exclamation-triangle m-r-xs"></i>Rents are not enabled.</span>
                    </div>
                </div>
                    <input asp-for="Rent" type="hidden" />
                    <input asp-for="RentDisplay" type="hidden" />
            }
            @if (_propertySettings.ShowPremium)
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Premium:</label>
                    <div class="col-sm-3">
                        <input asp-for="Premium" type="number" step="0.01" min="0" max="99999999999" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <select class="form-control" asp-for="PremiumDisplay">
                            @foreach (string s in System.Text.RegularExpressions.Regex.Split(_propertySettings.PriceDisplays, "\r\n|\r|\n"))
                            {
                                <option value="@s">@string.Format(s, "£X")</option>
                            }
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Premiums:</label>
                    <div class="col-sm-3">
                        <span class="label label-warning form-control-message"><i class="fa fa-exclamation-triangle m-r-xs"></i>Premiums are not enabled.</span>
                    </div>
                </div>
                    <input asp-for="Premium" type="hidden" />
                    <input asp-for="PremiumDisplay" type="hidden" />
            }
            @if (_propertySettings.ShowFees)
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Fees:</label>
                    <div class="col-sm-3">
                        <input asp-for="Fees" type="number" step="0.01" min="0" max="99999999999" class="form-control" />
                    </div>
                    <div class="col-sm-6">
                        <select class="form-control" asp-for="FeesDisplay">
                            @foreach (string s in System.Text.RegularExpressions.Regex.Split(_propertySettings.FeesDisplay, "\r\n|\r|\n"))
                            {
                                <option value="@s">@string.Format(s, "£X")</option>
                            }
                        </select>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">Fees:</label>
                    <div class="col-sm-3">
                        <span class="label label-warning form-control-message"><i class="fa fa-exclamation-triangle m-r-xs"></i>Fees are not enabled.</span>
                    </div>
                </div>
                    <input asp-for="Fees" type="hidden" />
                    <input asp-for="FeesDisplay" type="hidden" />
            }
        </fieldset>
    </div>
</div>
