@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
@inject ISiteConfiguration _site
@model EditContentModel
@{
    ViewBag.Title = "Edit " + Model.Type.TypeName + ": " + Model.Content.Title;
    ContentApi mapi = new ContentApi(Model.Content);
}
@section buttons {
    <div class="btn-group">
        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-cog m-r-sm"></i><span class="caret"></span></button>
        <ul class="dropdown-menu dropdown-menu-right">
            @if (Model.Type.ShowPreview)
            {
                <li><a href="#editor" aria-controls="profile" role="tab" data-toggle="tab"><i class="fa fa-edit m-r-xs"></i>Editor</a></li>
            }
            @if (Model.Type.ShowDesigner)
            {
                <li><a asp-area="" asp-action="Show" asp-controller="Content" asp-route-id="@Model.Content.Id" asp-route-editMode="true"><i class="fa fa-pencil m-r-xs"></i>Designer</a></li>
            }
            @if (Model.Type.ShowPreview)
            {
                <li><a href="#designer" aria-controls="profile" role="tab" data-toggle="tab"><i class="fa fa-edit m-r-xs"></i>Preview</a></li>
            }
            @if (Model.Type.HasPage)
            {
                <li><a href="@mapi.Url"><i class="fa fa-desktop m-r-xs"></i>Preview</a></li>            
            }
            <li><a class="delete-content" data-id="@Model.Content.Id" data-type="@Model.Type.Type"><i class="fa fa-trash m-r-xs"></i>Delete</a></li>
        </ul>
    </div>
    <a href="javascript:document.getElementById('edit-content').submit()" class="btn btn-success">
        <i class="fa fa-save m-r-sm"></i>Save
    </a>

}
@section breadcrumbs {
    <ol class="breadcrumb">
        <li>
            <a href="/admin">Home</a>
        </li>
        <li>
            <a asp-action="Index" asp-controller="Content" asp-route-type="@Model.Type.Type" asp-route-area="Admin">
                <i class="fa @Model.Type.Icon m-r-xs"></i>
                @Model.Type.TypeNamePlural
            </a>
        </li>
        <li class="active">
            <strong>@ViewBag.Title</strong>
        </li>
    </ol>
}
@if (Model.SaveResult != null)
{
    @if (Model.SaveResult.Succeeded)
    {
        <div class="alert alert-success alert-dismissable">
            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
            <i class="fa fa-thumbs-up m-r-xs"></i><strong>Saved!</strong> The @Model.Type.TypeName has been saved.
        </div>
    }
    else
    {
        <div class="alert alert-danger alert-dismissable">
            <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
            <i class="fa fa-meh-o m-r-xs"></i><strong>Not saved!</strong> The @Model.Type.TypeName has not been saved, there were issues... <a role="button" data-toggle="collapse" href="#errors" aria-expanded="false" aria-controls="errors" class="txt-color-red">Show Issues</a>
            <div id="errors" class="collapse">
                <ul class="m-t-md">
                    @foreach (Hood.Infrastructure.OperationError error in Model.SaveResult.Errors)
                    {
                        <li>@error.Description</li>
                    }
                </ul>
            </div>
        </div>
    }
}
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="editor">
        <form method="post" id="edit-content" data-id="@Model.Content.Id">
            <input type="hidden" id="Id" name="Id" value="@Model.Content.Id" />
            <input type="hidden" id="Views" name="Views" value="@Model.Content.Views" />
            <div class="row">
                <div class="col-md-8">
                @switch (Model.Type.Type)
                {
                    case "product":
                    case "rental":
                        await Html.RenderPartialAsync("_Edit_Product");
                        break;
                    case "page":
                        await Html.RenderPartialAsync("_Edit_Page");
                        break;
                    case "slider":
                        await Html.RenderPartialAsync("_Edit_Slider");
                        break;
                    case "team":
                        await Html.RenderPartialAsync("_Edit_Team");
                        break;
                    default:
                        await Html.RenderPartialAsync("_Edit_Default");
                        break;
                }
                </div>
                <div class="col-md-4">
                    <div class="right-column">
                        @if (Model.Type.ShowImage || Model.Type.ShowBanner)
                        {
                            <div class="editor-box">
                                <h5>Images</h5>
                                @{ await Html.RenderPartialAsync("_Field_Images"); }
                            </div>
                                    }
                        @if (Model.Type.ShowCategories)
                        {
                            <div class="editor-box">
                                <h5>Categories</h5>
                                <div class="hood-inline categories" data-url="@Url.Action("Categories")"></div>
                                <div class="form-group">
                                    <label class="control-label">Add to a category</label>
                                    <div class="input-group">
                                        <input name="content-category-name" id="content-category-name" type="text" placeholder="Enter a new (or existing) category..." class="form-control autocomplete-category">
                                        <span class="input-group-btn">
                                            <button type="button" id="add-content-category" class="btn btn-primary" data-url="@Url.Action("AddCategoryToContent")"> Add!</button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="editor-box">
                            <h5>
                                @if (Model.Content.ContentType == "page")
                                {
                                    <span>Url &amp; </span>
                                }
                                Publish Settings
                            </h5>
                            @if (Model.Content.ContentType == "page")
                            {
                                <label for="Slug" class="control-label">Slug</label>
                                <div>
                                    <input id="Slug" name="Slug" class="form-control" value="@Model.Content.Slug" />
                                </div>
                                <p class="font-xs url-preview">
                                    URL Preview:
                                    <br />
                                    <a class="font-sm" href="@Url.AbsoluteUrl(Model.Content.Slug)" target="_blank">@Url.AbsoluteUrl()<strong><span class="slug-display">@Model.Content.Slug</span></strong></a>
                                    <br />
                                    Note: Do not use reserved words as they will not reach this page. These include:<br /><strong>about, team, testimonials, news, shop, admin, api, services.</strong>
                                </p>
                                <hr />
                            }
                            <div class="row">
                                <div class="col-xs-12">
                                    @{ await Html.RenderPartialAsync("_Field_Author"); }
                                </div>
                                <div class="col-xs-12">
                                    @{ await Html.RenderPartialAsync("_Field_Status"); }
                                </div>
                                <div class="col-xs-12">
                                    @{ await Html.RenderPartialAsync("_Field_PublishDate"); }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    @if (Model.Type.ShowPreview)
    {
        <div role="tabpanel" class="tab-pane" id="designer">
            @{ await Html.RenderPartialAsync("_Designer"); }
        </div>
    }
</div>




