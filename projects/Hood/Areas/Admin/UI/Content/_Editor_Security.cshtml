@model EditContentModel

@{
    BasicSettings _basicSettings = _settings.GetBasicSettings();
    Hood.Infrastructure.OperationResult subResult = _settings.SubscriptionsEnabled();
    bool subsEnabled = subResult.Succeeded;
}
<h5>@Model.Content.ContentType.ToTitleCase() Security Settings</h5>
<div class="ibox-content">
    <fieldset class="form-horizontal">
        @foreach (ContentMeta cm in Model.Content.Metadata.Where(c => c.Name.StartsWith("Settings.Security.")).OrderBy(cm => cm.Name))
        {
            if (cm.Name == "Settings.Security.Subscription")
            {
                <div class="form-group">
                    <label for="@string.Format("Meta:{0}", cm.Name)" class="col-sm-3 control-label">
                        Subscription:
                    </label>
                    <div class="col-sm-8">
                        @if (subsEnabled && Model.Subscriptions.Count() > 0)
                        {
                            List<string> subs = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(cm.GetStringValue());
                            <p class="m-t-xs">Select subscriptions that can access this page. <em>If you select none, then the page is open to all users.</em></p>
                            <input class="form-control checkbox-values" type="hidden" id="@string.Format("Meta-{0}", cm.Name)" name="@string.Format("Meta:{0}", cm.Name)" value="@cm.GetStringValue()" />
                            @foreach (Subscription sub in Model.Subscriptions.OrderBy(p => p.Amount))
                            {
                                <div class="checkbox">
                                    @if (subs == null || !subs.Contains(sub.StripeId))
                                    {
                                        <input type="checkbox" value="@string.Format("{0}", sub.StripeId)" data-input="@string.Format("Meta-{0}", cm.Name)" id="plan-@sub.StripeId.ToSeoUrl()" />
                                    }
                                    else
                                    {
                                        <input type="checkbox" value="@string.Format("{0}", sub.StripeId)" data-input="@string.Format("Meta-{0}", cm.Name)" id="plan-@sub.StripeId.ToSeoUrl()" checked />
                                    }
                                    <label for="plan-@sub.StripeId.ToSeoUrl()">
                                        @sub.Name
                                    </label>
                                </div>
                            }
                        }
                        else
                        {
                            <span class="label label-warning form-control-message"><i class="fa fa-exclamation-triangle m-r-xs"></i>Subscriptions are not enabled.</span>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label for="@string.Format("Meta:{0}", cm.Name)" class="col-sm-3 control-label">
                        @cm.Name.Replace("Settings.Security.", "").CamelCaseToString():
                    </label>
                    <div class="col-sm-8">
                        @{await Html.RenderPartialAsync("_MetaEditor_Default", (object)cm); }
                    </div>
                </div>
            }
        }
    </fieldset>
</div>
